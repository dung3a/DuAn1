/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package duan.UI;

import duan.DAO.UserDAO;
import duan.JDBC.JDBC;
import duan.model.Users;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author anhdu
 */
public class ThongTinTKJFrame extends javax.swing.JFrame {

    /**
     * Creates new form ThongTinTK
     */
    public ThongTinTKJFrame() {

        initComponents();
        this.getContentPane().setBackground(Color.white);
        this.setLocationRelativeTo(null);
        this.setTitle("Thông Tin Tài Khoản");
        this.load_user();

    }
    int yMouse, xMouse;
    int Dem = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpn_Minimize = new javax.swing.JLabel();
        jpn_Close = new javax.swing.JLabel();
        lbl_Tile = new javax.swing.JLabel();
        lbl_Titlebar = new javax.swing.JLabel();
        jtl_Main = new javax.swing.JTabbedPane();
        jpn_ThongTin = new javax.swing.JPanel();
        lbl_HovaTen = new javax.swing.JLabel();
        lbl_Email = new javax.swing.JLabel();
        lbl_SoDT = new javax.swing.JLabel();
        txt_HovaTen = new javax.swing.JTextField();
        txt_Email = new javax.swing.JTextField();
        txt_SoDT = new javax.swing.JTextField();
        lbl_ThongBaoTk = new javax.swing.JLabel();
        lbl_CapNhat = new javax.swing.JLabel();
        jpn_DoiMK = new javax.swing.JPanel();
        lbl_MkCu = new javax.swing.JLabel();
        lbl_MkMoi = new javax.swing.JLabel();
        lbl_NhapLaiMk = new javax.swing.JLabel();
        txt_MatKhauCu = new javax.swing.JPasswordField();
        txt_MatKhauMoi = new javax.swing.JPasswordField();
        txt_NhapLaiMatKhau = new javax.swing.JPasswordField();
        lbl_ShowMkCu = new javax.swing.JLabel();
        lbl_ShowMkMoi = new javax.swing.JLabel();
        lbl_ThongBaoPass = new javax.swing.JLabel();
        jlbDoiMatKhau = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Thông Tin Tài Khoản");
        setMinimumSize(new java.awt.Dimension(470, 365));
        setUndecorated(true);
        setResizable(false);

        jpn_Minimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duan/Logo/Minimize.png"))); // NOI18N
        jpn_Minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpn_MinimizeMouseClicked(evt);
            }
        });

        jpn_Close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duan/Logo/Close.png"))); // NOI18N
        jpn_Close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpn_CloseMouseClicked(evt);
            }
        });

        lbl_Tile.setFont(new java.awt.Font("Verdana", 3, 14)); // NOI18N
        lbl_Tile.setForeground(new java.awt.Color(255, 255, 255));
        lbl_Tile.setText("Thông Tin Tài Khoản");

        lbl_Titlebar.setBackground(new java.awt.Color(0, 153, 153));
        lbl_Titlebar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duan/Logo/Titlebar_background2.png"))); // NOI18N
        lbl_Titlebar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                lbl_TitlebarMouseDragged(evt);
            }
        });
        lbl_Titlebar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbl_TitlebarMousePressed(evt);
            }
        });

        jtl_Main.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 1, 1, new java.awt.Color(102, 102, 102)));

        jpn_ThongTin.setBackground(new java.awt.Color(255, 255, 255));

        lbl_HovaTen.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        lbl_HovaTen.setText("Họ và Tên");

        lbl_Email.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        lbl_Email.setText("Email");

        lbl_SoDT.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        lbl_SoDT.setText("Số Điện Thoại");

        txt_HovaTen.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        txt_HovaTen.setToolTipText("Họ và Tên");

        txt_Email.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        txt_Email.setToolTipText("Email");

        txt_SoDT.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        txt_SoDT.setToolTipText("Số Điện Thoại");

        lbl_ThongBaoTk.setBackground(new java.awt.Color(255, 255, 255));
        lbl_ThongBaoTk.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        lbl_ThongBaoTk.setForeground(new java.awt.Color(255, 0, 0));
        lbl_ThongBaoTk.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lbl_CapNhat.setBackground(new java.awt.Color(255, 153, 0));
        lbl_CapNhat.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_CapNhat.setForeground(new java.awt.Color(255, 255, 255));
        lbl_CapNhat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_CapNhat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duan/Logo/Updates_25px.png"))); // NOI18N
        lbl_CapNhat.setText("Cập Nhật");
        lbl_CapNhat.setOpaque(true);
        lbl_CapNhat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbl_CapNhatMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jpn_ThongTinLayout = new javax.swing.GroupLayout(jpn_ThongTin);
        jpn_ThongTin.setLayout(jpn_ThongTinLayout);
        jpn_ThongTinLayout.setHorizontalGroup(
            jpn_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpn_ThongTinLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lbl_ThongBaoTk, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(219, 219, 219))
            .addGroup(jpn_ThongTinLayout.createSequentialGroup()
                .addGroup(jpn_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpn_ThongTinLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jpn_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_SoDT)
                            .addComponent(lbl_Email)
                            .addComponent(lbl_HovaTen))
                        .addGap(30, 30, 30)
                        .addGroup(jpn_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_HovaTen)
                            .addComponent(txt_Email)
                            .addComponent(txt_SoDT, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpn_ThongTinLayout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(lbl_CapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpn_ThongTinLayout.setVerticalGroup(
            jpn_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpn_ThongTinLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jpn_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_HovaTen)
                    .addComponent(txt_HovaTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jpn_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Email)
                    .addComponent(txt_Email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(jpn_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_SoDT)
                    .addComponent(txt_SoDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lbl_ThongBaoTk, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_CapNhat, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addContainerGap())
        );

        jtl_Main.addTab("Thông Tin Tài Khoản", jpn_ThongTin);

        jpn_DoiMK.setBackground(new java.awt.Color(255, 255, 255));

        lbl_MkCu.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        lbl_MkCu.setText("Mật Khẩu Cũ");

        lbl_MkMoi.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        lbl_MkMoi.setText("Mật Khẩu Mới");

        lbl_NhapLaiMk.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        lbl_NhapLaiMk.setText("Nhập Lại Mật Khẩu");

        txt_MatKhauCu.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        txt_MatKhauMoi.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        txt_NhapLaiMatKhau.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        lbl_ShowMkCu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duan/Logo/InvisibleEye.png"))); // NOI18N
        lbl_ShowMkCu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_ShowMkCuMouseClicked(evt);
            }
        });

        lbl_ShowMkMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duan/Logo/InvisibleEye.png"))); // NOI18N
        lbl_ShowMkMoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_ShowMkMoiMouseClicked(evt);
            }
        });

        lbl_ThongBaoPass.setBackground(new java.awt.Color(255, 255, 255));
        lbl_ThongBaoPass.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        lbl_ThongBaoPass.setForeground(new java.awt.Color(255, 0, 51));
        lbl_ThongBaoPass.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jlbDoiMatKhau.setBackground(new java.awt.Color(255, 153, 0));
        jlbDoiMatKhau.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jlbDoiMatKhau.setForeground(new java.awt.Color(255, 255, 255));
        jlbDoiMatKhau.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbDoiMatKhau.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duan/Logo/Updates_25px.png"))); // NOI18N
        jlbDoiMatKhau.setText("Đổi Mật Khẩu");
        jlbDoiMatKhau.setOpaque(true);
        jlbDoiMatKhau.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jlbDoiMatKhauMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jpn_DoiMKLayout = new javax.swing.GroupLayout(jpn_DoiMK);
        jpn_DoiMK.setLayout(jpn_DoiMKLayout);
        jpn_DoiMKLayout.setHorizontalGroup(
            jpn_DoiMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpn_DoiMKLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpn_DoiMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbl_ThongBaoPass, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpn_DoiMKLayout.createSequentialGroup()
                        .addGroup(jpn_DoiMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_MkCu)
                            .addComponent(lbl_MkMoi)
                            .addComponent(lbl_NhapLaiMk))
                        .addGap(18, 18, 18)
                        .addGroup(jpn_DoiMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_NhapLaiMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jpn_DoiMKLayout.createSequentialGroup()
                                .addComponent(txt_MatKhauCu, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lbl_ShowMkCu))
                            .addGroup(jpn_DoiMKLayout.createSequentialGroup()
                                .addComponent(txt_MatKhauMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lbl_ShowMkMoi)))))
                .addContainerGap(24, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpn_DoiMKLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jlbDoiMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(141, 141, 141))
        );
        jpn_DoiMKLayout.setVerticalGroup(
            jpn_DoiMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpn_DoiMKLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jpn_DoiMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_MkCu)
                    .addComponent(txt_MatKhauCu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_ShowMkCu))
                .addGap(36, 36, 36)
                .addGroup(jpn_DoiMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_MkMoi)
                    .addComponent(txt_MatKhauMoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_ShowMkMoi))
                .addGap(31, 31, 31)
                .addGroup(jpn_DoiMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_NhapLaiMk)
                    .addComponent(txt_NhapLaiMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(lbl_ThongBaoPass, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlbDoiMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        jtl_Main.addTab("Đổi Mật Khẩu", jpn_DoiMK);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lbl_Tile, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(200, 200, 200)
                .addComponent(jpn_Minimize)
                .addGap(0, 0, 0)
                .addComponent(jpn_Close))
            .addComponent(lbl_Titlebar, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jtl_Main, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lbl_Tile))
                    .addComponent(jpn_Minimize)
                    .addComponent(jpn_Close)
                    .addComponent(lbl_Titlebar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(jtl_Main, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jpn_CloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpn_CloseMouseClicked
        this.dispose();
    }//GEN-LAST:event_jpn_CloseMouseClicked

    private void jpn_MinimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpn_MinimizeMouseClicked
        this.setState(this.ICONIFIED);
    }//GEN-LAST:event_jpn_MinimizeMouseClicked

    private void lbl_TitlebarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_TitlebarMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_lbl_TitlebarMouseDragged

    private void lbl_TitlebarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_TitlebarMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_lbl_TitlebarMousePressed

    private void lbl_ShowMkCuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_ShowMkCuMouseClicked
        if (Dem == 0) {
            txt_MatKhauCu.setEchoChar((char) 0);
            lbl_ShowMkCu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duan/Logo/Eye.png")));
            Dem = -1;
        } else {
            txt_MatKhauCu.setEchoChar('*');
            lbl_ShowMkCu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duan/Logo/InvisibleEye.png")));
            Dem = 0;
        }
    }//GEN-LAST:event_lbl_ShowMkCuMouseClicked

    private void lbl_ShowMkMoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_ShowMkMoiMouseClicked
        if (Dem == 0) {
            txt_MatKhauMoi.setEchoChar((char) 0);
            lbl_ShowMkMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duan/Logo/Eye.png")));
            Dem = -1;
        } else {
            txt_MatKhauMoi.setEchoChar('*');
            lbl_ShowMkMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duan/Logo/InvisibleEye.png")));
            Dem = 0;
        }
    }//GEN-LAST:event_lbl_ShowMkMoiMouseClicked

    private void lbl_CapNhatMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_CapNhatMousePressed
        if (checktt()) {
            this.update_User();
        }
    }//GEN-LAST:event_lbl_CapNhatMousePressed

    private void jlbDoiMatKhauMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbDoiMatKhauMousePressed
        try {
            this.updatePass();
        } catch (SQLException ex) {
        }
    }//GEN-LAST:event_jlbDoiMatKhauMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThongTinTKJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThongTinTKJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThongTinTKJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThongTinTKJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThongTinTKJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jlbDoiMatKhau;
    private javax.swing.JLabel jpn_Close;
    private javax.swing.JPanel jpn_DoiMK;
    private javax.swing.JLabel jpn_Minimize;
    private javax.swing.JPanel jpn_ThongTin;
    private javax.swing.JTabbedPane jtl_Main;
    private javax.swing.JLabel lbl_CapNhat;
    private javax.swing.JLabel lbl_Email;
    private javax.swing.JLabel lbl_HovaTen;
    private javax.swing.JLabel lbl_MkCu;
    private javax.swing.JLabel lbl_MkMoi;
    private javax.swing.JLabel lbl_NhapLaiMk;
    private javax.swing.JLabel lbl_ShowMkCu;
    private javax.swing.JLabel lbl_ShowMkMoi;
    private javax.swing.JLabel lbl_SoDT;
    private javax.swing.JLabel lbl_ThongBaoPass;
    private javax.swing.JLabel lbl_ThongBaoTk;
    private javax.swing.JLabel lbl_Tile;
    private javax.swing.JLabel lbl_Titlebar;
    private javax.swing.JTextField txt_Email;
    private javax.swing.JTextField txt_HovaTen;
    private javax.swing.JPasswordField txt_MatKhauCu;
    private javax.swing.JPasswordField txt_MatKhauMoi;
    private javax.swing.JPasswordField txt_NhapLaiMatKhau;
    private javax.swing.JTextField txt_SoDT;
    // End of variables declaration//GEN-END:variables

    UserDAO userDAO = new UserDAO();
    String UserID;

    /*----------------Thông tin TK--------------------*/
    void load_user() {
        try {
            Users model = userDAO.select();
            if (model != null) {
                this.setModel(model);
                UserID = model.getUserid();
            }
        } catch (Exception e) {
            lbl_ThongBaoTk.setText("Không thể load User lên !");
            System.err.println(e);
        }
    }

    void setModel(Users model) {
        txt_HovaTen.setText(model.getTen());
        txt_Email.setText(model.getEmail());
        txt_SoDT.setText(model.getSdt());
    }

    Users getModel() {
        Users model = new Users();
        model.setTen(txt_HovaTen.getText());
        model.setEmail(txt_Email.getText());
        model.setSdt(txt_SoDT.getText());
        model.setUserid(UserID);
        return model;
    }

    //Update thông tin User
    void update_User() {
        Users model = getModel();
        try {
            userDAO.updateUser(model);
            this.load_user();
            lbl_ThongBaoTk.setForeground(new Color(0, 102, 255));
            lbl_ThongBaoTk.setText("Cập nhật thông tin thành công");
        } catch (Exception e) {
            System.err.println(e);
            lbl_ThongBaoTk.setForeground(new Color(255, 0, 51));
            lbl_ThongBaoTk.setText("Cập nhật thông tin thất bại");
        }
    }

    boolean checktt() {
        if (txt_HovaTen.getText().trim().equals("")) {
            lbl_ThongBaoTk.setForeground(new Color(255, 0, 51));
            lbl_ThongBaoTk.setText("Không để trống họ tên !");
            return false;
        } else if (txt_Email.getText().trim().equals("")) {
            lbl_ThongBaoTk.setForeground(new Color(255, 0, 51));
            lbl_ThongBaoTk.setText("Không để trống Email !");
            return false;
        } else if (txt_SoDT.getText().trim().equals("")) {
            lbl_ThongBaoTk.setForeground(new Color(255, 0, 51));
            lbl_ThongBaoTk.setText("Không để trống Số điện thoại !");
            return false;
        } else if (!txt_HovaTen.getText().matches("[A-Za-zÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚÝàáâãèéêìíòóôõùúýĂăĐđĨĩŨũƠơƯưẠ-ỹ\\s]{1,}")) {
            lbl_ThongBaoTk.setForeground(new Color(255, 0, 51));
            lbl_ThongBaoTk.setText("Tên chứa ký tự không hợp lệ !");
            return false;
        } else if (!txt_Email.getText().matches("^[\\w-_\\.]+\\@[\\w&&[^0-9]]+\\.[\\w&&[^0-9]]+$")) {
            lbl_ThongBaoTk.setForeground(new Color(255, 0, 51));
            lbl_ThongBaoTk.setText("Sai định dạng email !");
            return false;
        } else if (!txt_SoDT.getText().trim().matches("\\d+")) {
            lbl_ThongBaoTk.setForeground(new Color(255, 0, 51));
            lbl_ThongBaoTk.setText("Số điện thoại chỉ nhập số !");
            return false;
        } else if (txt_SoDT.getText().length() > 10) {
            lbl_ThongBaoTk.setForeground(new Color(255, 0, 51));
            lbl_ThongBaoTk.setText("Số điện thoại không quá 10 số!");
            return false;
        }
        return true;
    }

    /*----------------Pass--------------------*/
    public void newpass() {
        txt_MatKhauCu.setText("");
        txt_MatKhauMoi.setText("");
        txt_NhapLaiMatKhau.setText("");
    }

    Users getModelPass() {
        Users model = new Users();
        model.setPass(txt_MatKhauMoi.getText());
        model.setUserid(UserID);
        return model;
    }

    boolean checkOldPass() throws SQLException {
        ResultSet rs = JDBC.executeQuery("SELECT Pass FROM USERS WHERE UserId = ? ", UserID);
        if (rs.next()) {
            String Oldpass = rs.getString(1);
            if (!txt_MatKhauCu.getText().trim().equals(Oldpass)) {
                lbl_ThongBaoPass.setForeground(new Color(255, 0, 51));
                lbl_ThongBaoPass.setText("Mật khẩu cũ không chính xác !");
                this.newpass();
                return false;
            }
        }
        return true;
    }

    boolean checkMatch() {
        if (!txt_MatKhauMoi.getText().trim().equals(txt_NhapLaiMatKhau.getText().trim())) {
            lbl_ThongBaoPass.setForeground(new Color(255, 0, 51));
            lbl_ThongBaoPass.setText("Mật khẩu mới không trùng khớp !");
            txt_NhapLaiMatKhau.setText("");
            return false;
        }
        return true;
    }

    boolean checkpass() {
        if (txt_MatKhauCu.getText().trim().equals("")) {
            lbl_ThongBaoPass.setForeground(new Color(255, 0, 51));
            lbl_ThongBaoPass.setText("Không để trống mật khẩu cũ !");
            return false;
        } else if (txt_MatKhauMoi.getText().trim().equals("")) {
            lbl_ThongBaoPass.setForeground(new Color(255, 0, 51));
            lbl_ThongBaoPass.setText("Không để trống mật khẩu mói !");
            return false;
        } else if (txt_NhapLaiMatKhau.getText().trim().equals("")) {
            lbl_ThongBaoPass.setForeground(new Color(255, 0, 51));
            lbl_ThongBaoPass.setText("Không để trống mật khẩu xác nhận !");
            return false;
        }
        return true;
    }

    void updatePass() throws SQLException {
        Users model = getModelPass();
        if (checkpass() && checkOldPass() && checkMatch()) {
            userDAO.updatePass(model);
            lbl_ThongBaoPass.setForeground(new Color(0, 102, 255));
            lbl_ThongBaoPass.setText("Cập nhật mật khẩu thành công");
            this.newpass();
        }
    }
}
