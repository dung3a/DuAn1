package duan.UI;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import duan.DAO.CanHoDAO;
import duan.JDBC.JDBC;
import duan.model.CanHo;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;

/**
 *
 * @author Nhom 6
 */
public class CanHoJPanel extends javax.swing.JPanel {

    ResultSet rs = null;
    String macanho = "";
    String a = "";

    /**
     * Creates new form CanHoJPanel
     */
    public CanHoJPanel() {
        initComponents();
        this.loadPhong(macanho);
        this.loadTang();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txt_TimKiem = new javax.swing.JTextField();
        lblTimKiem = new javax.swing.JLabel();
        lblTang = new javax.swing.JLabel();
        cbo_Tang = new javax.swing.JComboBox<>();
        lblThongBaoCanHo = new javax.swing.JLabel();
        sclCanHo = new javax.swing.JScrollPane();
        pnlCanHo = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1040, 660));
        setMinimumSize(new java.awt.Dimension(1040, 660));
        setPreferredSize(new java.awt.Dimension(1040, 660));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setMaximumSize(new java.awt.Dimension(1040, 127));
        jPanel1.setMinimumSize(new java.awt.Dimension(1040, 127));
        jPanel1.setPreferredSize(new java.awt.Dimension(1040, 127));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_TimKiem.setBackground(new java.awt.Color(0, 153, 153));
        txt_TimKiem.setFont(new java.awt.Font("Tahoma", 3, 16)); // NOI18N
        txt_TimKiem.setForeground(new java.awt.Color(255, 255, 255));
        txt_TimKiem.setToolTipText("Tìm Phòng");
        txt_TimKiem.setBorder(null);
        jPanel1.add(txt_TimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 270, 40));

        lblTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duan/Logo/Search.png"))); // NOI18N
        lblTimKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblTimKiemMouseClicked(evt);
            }
        });
        jPanel1.add(lblTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 40, -1, -1));

        lblTang.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        lblTang.setForeground(new java.awt.Color(255, 255, 255));
        lblTang.setText("TẦNG");
        jPanel1.add(lblTang, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 50, -1, 30));

        cbo_Tang.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        cbo_Tang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả" }));
        cbo_Tang.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        cbo_Tang.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cbo_Tang.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        cbo_Tang.setMaximumSize(new java.awt.Dimension(87, 26));
        cbo_Tang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_TangActionPerformed(evt);
            }
        });
        jPanel1.add(cbo_Tang, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 50, 240, -1));

        lblThongBaoCanHo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblThongBaoCanHo.setForeground(new java.awt.Color(255, 153, 153));
        jPanel1.add(lblThongBaoCanHo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 400, 40));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 120));

        pnlCanHo.setBackground(new java.awt.Color(255, 255, 255));
        pnlCanHo.setMaximumSize(new java.awt.Dimension(1014, 541));
        pnlCanHo.setMinimumSize(new java.awt.Dimension(1014, 541));
        pnlCanHo.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 6, 6));
        sclCanHo.setViewportView(pnlCanHo);

        add(sclCanHo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 1040, 540));
    }// </editor-fold>//GEN-END:initComponents

    private void lblTimKiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTimKiemMouseClicked
        macanho = txt_TimKiem.getText();
        if (checkTim()) {
            loadPhong(macanho);
            txt_TimKiem.setText("");
        }
    }//GEN-LAST:event_lblTimKiemMouseClicked

    private void cbo_TangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_TangActionPerformed
        a = (String) cbo_Tang.getSelectedItem();

        this.loadPhongbyTang(a);


    }//GEN-LAST:event_cbo_TangActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbo_Tang;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblTang;
    private javax.swing.JLabel lblThongBaoCanHo;
    private javax.swing.JLabel lblTimKiem;
    private javax.swing.JPanel pnlCanHo;
    private javax.swing.JScrollPane sclCanHo;
    private javax.swing.JTextField txt_TimKiem;
    // End of variables declaration//GEN-END:variables

    private void clickSlect(String masocanho, String canhoID) {
        new ThongTinCanHoJFrame(masocanho, canhoID).setVisible(true);
    }

    private void loadTang() {
        rs = JDBC.executeQuery("SELECT DISTINCT  Tang FROM dbo.CanHo ");
        try {
            while (rs.next()) {
                cbo_Tang.addItem(rs.getString("Tang"));

            }
            cbo_Tang.setSelectedItem(1);

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    private void loadPhong(String masocanho) {
        pnlCanHo.removeAll();
        CanHoDAO canho = new CanHoDAO();
        List<CanHo> listCanHo = canho.select(masocanho);
        int soluongcanho = listCanHo.size();

        for (CanHo canHo : listCanHo) {
            if (!canHo.isTinhTrang()) {

                String noidung = "<html> <style>body{\n"
                        + "    text-align: center;\n"
                        + "    font-family: 'Tahoma';\n"
                        + "    color: white;\n"
                        + "}</style>";
                noidung += "<b><font size=5> Căn Hộ  " + (canHo.getMaSoCanHo()) + " </b></font>";
                JLabel canholb = new JLabel();
                canholb.setPreferredSize(new Dimension(245, 200));
                canholb.setForeground(new Color(255, 153, 51));
                canholb.setCursor(new Cursor(Cursor.HAND_CURSOR));
                canholb.setBackground(new Color(255, 153, 51));
                canholb.setPreferredSize(new Dimension(245, 195));
                canholb.setHorizontalAlignment((int) LEFT_ALIGNMENT);
                canholb.setIcon(new ImageIcon(this.getClass().getResource("/duan/Logo/LogoMain.png")));

                canholb.setText(noidung);
                canholb.setToolTipText("Click vào để xem thông tin căn hộ " + (canHo.getMaSoCanHo()));
                canholb.setHorizontalAlignment(SwingConstants.CENTER);
                canholb.setOpaque(true);
                canholb.addMouseListener(new MouseAdapter() {
                    @Override
                    public void mouseClicked(MouseEvent e) {
                        clickSlect(canHo.getMaSoCanHo(), canHo.getCanHoid());
                    }

                });
                pnlCanHo.add(canholb);
            } else {
                String noidung = "<html> <style>body{\n"
                        + "    text-align: center;\n"
                        + "    font-family: 'Tahoma';\n"
                        + "    color: white;\n"
                        + "}</style>";
                noidung += "<b><font size=5> Căn Hộ  " + (canHo.getMaSoCanHo()) + " </b></font>";
                JLabel canholb = new JLabel();
                canholb.setPreferredSize(new Dimension(245, 200));
                canholb.setForeground(new Color(121, 196, 71));
                canholb.setCursor(new Cursor(Cursor.HAND_CURSOR));
                canholb.setBackground(new Color(121, 196, 71));
                canholb.setPreferredSize(new Dimension(245, 195));
                canholb.setHorizontalAlignment((int) LEFT_ALIGNMENT);
                canholb.setIcon(new ImageIcon(this.getClass().getResource("/duan/Logo/LogoMain.png")));

                canholb.setText(noidung);
                canholb.setToolTipText("Click vào để xem thông tin căn hộ " + (canHo.getMaSoCanHo()));
                canholb.setHorizontalAlignment(SwingConstants.CENTER);
                canholb.setOpaque(true);
                canholb.addMouseListener(new MouseAdapter() {
                    @Override
                    public void mouseClicked(MouseEvent e) {
                        clickSlect(canHo.getMaSoCanHo(), canHo.getCanHoid());
                    }

                });
                pnlCanHo.add(canholb);
            }
        }

        if (soluongcanho % 4 != 0) {
            pnlCanHo.setPreferredSize(new Dimension(1000, 200 * (soluongcanho / 4 + 1)));

        } else {
            pnlCanHo.setPreferredSize(new Dimension(1000, 200 * (soluongcanho / 4)));

        }
        sclCanHo.setPreferredSize(new Dimension(1014, 500));
        sclCanHo.getVerticalScrollBar().setUnitIncrement(20);
        sclCanHo.setViewportView(pnlCanHo);
    }

    private void loadPhongbyTang(String tang) {
        pnlCanHo.removeAll();
        CanHoDAO canho = new CanHoDAO();
        List<CanHo> listCanHo = null;
        if (tang.equals("Tất cả")) {
            listCanHo = canho.select("");
        } else {
            listCanHo = canho.selectbyTang(tang);
        }

        int soluongcanho = listCanHo.size();

        for (CanHo canHo : listCanHo) {
            String noidung = "<html> <style>body{\n"
                    + "    text-align: center;\n"
                    + "    font-family: 'Tahoma';\n"
                    + "    color: white;\n"
                    + "}</style>";
            noidung += "<b><font size=5> Căn Hộ  " + (canHo.getMaSoCanHo()) + " </b></font>";
            JLabel canholb = new JLabel();
            canholb.setPreferredSize(new Dimension(245, 200));
            canholb.setForeground(new Color(121, 196, 71));
            canholb.setCursor(new Cursor(Cursor.HAND_CURSOR));
            canholb.setBackground(new Color(121, 196, 71));
            canholb.setPreferredSize(new Dimension(245, 195));
            canholb.setHorizontalAlignment((int) LEFT_ALIGNMENT);
            canholb.setIcon(new ImageIcon(this.getClass().getResource("/duan/Logo/LogoMain.png")));

            canholb.setText(noidung);
            canholb.setToolTipText("Click vào để xem thông tin căn hộ " + (canHo.getMaSoCanHo()));
            canholb.setHorizontalAlignment(SwingConstants.CENTER);
            canholb.setOpaque(true);
            canholb.addMouseListener(new MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    clickSlect(canHo.getMaSoCanHo(), canHo.getCanHoid());
                }

            });
            pnlCanHo.add(canholb);
        }

        if (soluongcanho % 4 != 0) {
            pnlCanHo.setPreferredSize(new Dimension(1000, 200 * (soluongcanho / 4 + 1)));

        } else {
            pnlCanHo.setPreferredSize(new Dimension(1000, 200 * (soluongcanho / 4)));

        }
        sclCanHo.setPreferredSize(new Dimension(1014, 500));
        sclCanHo.getVerticalScrollBar().setUnitIncrement(20);
        sclCanHo.setViewportView(pnlCanHo);
    }

    private boolean checkTim() {
        if (txt_TimKiem.getText().trim().equals("")) {
            lblThongBaoCanHo.setText("Không để trống ô tìm kiếm");
            return false;
        } else if (!txt_TimKiem.getText().trim().matches("\\d+")) {
            lblThongBaoCanHo.setText("Mã số căn hộ chỉ nhập số và không có khoảng trắng");
            return false;
        }
        lblThongBaoCanHo.setText("");
        return true;
    }
}
